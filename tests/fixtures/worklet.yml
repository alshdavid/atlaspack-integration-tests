options:
  name: worklet
package.json:
  type: module
colors.js: |
  export const colors = ['red', 'green', 'blue'];
pipeline.js: |
  import workletUrl from 'url:./worklet.js';

  CSS.paintWorklet.addModule(workletUrl);
url-worklet-error.js: |
  CSS.paintWorklet.addModule(new URL('worklet-error.js', import.meta.url));
url-worklet.js: |
  CSS.paintWorklet.addModule(new URL('worklet.js', import.meta.url));
url.js: |
  export default new URL('worklet.js', import.meta.url);
worklet-error.js: |
  import('./worklet');
worklet-pipeline-error.js: |
  import url from 'worklet:./worklet-error';
  export default url;
worklet-pipeline.js: |
  import url from 'worklet:./worklet';
  output = url;
worklet.js: |
  import {colors} from './colors';

  // checkerboard.js
  class CheckerboardPainter {
    paint(ctx, geom, properties) {
      // Use "ctx" as if it was a normal canvas
      const size = 32;
      for(let y = 0; y < geom.height/size; y++) {
        for(let x = 0; x < geom.width/size; x++) {
          const color = colors[(x + y) % colors.length];
          ctx.beginPath();
          ctx.fillStyle = color;
          ctx.rect(x * size, y * size, size, size);
          ctx.fill();
        }
      }
    }
  }

  // Register our class under a specific name
  registerPaint('checkerboard', CheckerboardPainter);
